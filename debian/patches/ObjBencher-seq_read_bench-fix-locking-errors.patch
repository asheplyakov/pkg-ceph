From: Alexey Sheplyakov <asheplyakov@mirantis.com>
Date: Fri, 26 Feb 2016 15:01:11 +0300
Subject: ObjBencher::seq_read_bench: fix locking errors

- take a lock before completion_ret
- remove extraneous comparison: it's clearly misplaced (bad merge?)
  and tries to unlock a Mutex twice in a row

Fixes: #14873

Signed-off-by: Alexey Sheplyakov <asheplyakov@mirantis.com>
---
 src/common/obj_bencher.cc | 11 ++---------
 1 file changed, 2 insertions(+), 9 deletions(-)

diff --git a/src/common/obj_bencher.cc b/src/common/obj_bencher.cc
index db4fd8f..a196e83 100644
--- a/src/common/obj_bencher.cc
+++ b/src/common/obj_bencher.cc
@@ -598,13 +598,13 @@ int ObjBencher::seq_read_bench(int seconds_to_run, int num_objects, int concurre
     index[slot] = data.started;
     lock.Unlock();
     completion_wait(slot);
+    lock.Lock();
     r = completion_ret(slot);
     if (r < 0) {
       cerr << "read got " << r << std::endl;
       lock.Unlock();
       goto ERR;
     }
-    lock.Lock();
     total_latency += data.cur_latency;
     if (data.cur_latency > data.max_latency) data.max_latency = data.cur_latency;
     if (data.cur_latency < data.min_latency) data.min_latency = data.cur_latency;
@@ -624,14 +624,7 @@ int ObjBencher::seq_read_bench(int seconds_to_run, int num_objects, int concurre
     lock.Lock();
     ++data.started;
     ++data.in_flight;
-      lock.Unlock();
-    if (memcmp(data.object_contents, cur_contents->c_str(), data.object_size) != 0) {
-      cerr << name[slot] << " is not correct!" << std::endl;
-      ++errors;
-    } else {
-      lock.Unlock();
-    }
-
+    lock.Unlock();
     name[slot] = newName;
   }
 
