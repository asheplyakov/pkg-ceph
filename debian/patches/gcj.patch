Last-Update: 2014-03-25
Forwarded: https://github.com/ceph/ceph/pull/1803
Author: Dmitry Smirnov <onlyjob@member.fsf.org>
Description: gcj compatibility, partial fix for FTBFS with "gcj" (i.e. "gcj-jdk").
 * prioritise use of `javac` executable (gcj provides it through alternatives).
 * pass '-classpath' option (gcj/javah ignores CLASSPATH environment variable).

 Changes should not affect OpenJDK which understand '-classpath' as well.

--- a/m4/ac_prog_javac.m4
+++ b/m4/ac_prog_javac.m4
@@ -34,11 +34,11 @@
 
 AC_DEFUN([AC_PROG_JAVAC],[
 AC_REQUIRE([AC_EXEEXT])dnl
 if test "x$JAVAPREFIX" = x; then
-        test "x$JAVAC" = x && AC_CHECK_PROGS(JAVAC, "gcj$EXEEXT -C" guavac$EXEEXT jikes$EXEEXT javac$EXEEXT)
+        test "x$JAVAC" = x && AC_CHECK_PROGS(JAVAC, javac$EXEEXT "gcj$EXEEXT -C" guavac$EXEEXT jikes$EXEEXT)
 else
-        test "x$JAVAC" = x && AC_CHECK_PROGS(JAVAC, "gcj$EXEEXT -C" guavac$EXEEXT jikes$EXEEXT javac$EXEEXT, $JAVAPREFIX)
+        test "x$JAVAC" = x && AC_CHECK_PROGS(JAVAC, javac$EXEEXT "gcj$EXEEXT -C" guavac$EXEEXT jikes$EXEEXT, $JAVAPREFIX)
 fi
 test "x$JAVAC" = x && AC_MSG_ERROR([no acceptable Java compiler found in \$PATH])
 AC_PROG_JAVAC_WORKS
 AC_PROVIDE([$0])dnl
--- a/src/java/Makefile.am
+++ b/src/java/Makefile.am
@@ -43,13 +43,13 @@
 #   https://blogs.oracle.com/darcy/entry/bootclasspath_older_source
 
 $(CEPH_PROXY): $(JAVA_SRC)
 	export CLASSPATH=java/ ; \
-	$(JAVAC) -source 1.5 -target 1.5 -Xlint:-options java/com/ceph/fs/*.java
+	$(JAVAC) -classpath java -source 1.5 -target 1.5 -Xlint:-options java/com/ceph/fs/*.java
 
 $(JAVA_H): $(CEPH_PROXY)
 	export CLASSPATH=java/ ; \
-	$(JAVAH) -jni -o $@ com.ceph.fs.CephMount
+	$(JAVAH) -classpath java -jni -o $@ com.ceph.fs.CephMount
 
 libcephfs.jar: $(CEPH_PROXY)
 	$(JAR) cf $@ $(JAVA_CLASSES:%=-C java %) 
 
