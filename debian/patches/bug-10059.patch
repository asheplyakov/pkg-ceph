commit c87bde6
Author: Samuel Just <sjust@redhat.com>
Date:   Sat Nov 15 10:44:20 2014

    PG: always clear_primary_state when leaving Primary
    
    Otherwise, entries from the log collection process might leak into the next
    epoch, where we might end up choosing a different authoritative log.  In this
    case, it resulted in us not rolling back to log entries on one of the replicas
    prior to trying to recover from an affected object due to the peer_missing not
    being cleared.
    
    Fixes: #10059
    Backport: giant, firefly, dumpling
    Signed-off-by: Samuel Just <sjust@redhat.com>

--- a/src/osd/PG.cc
+++ b/src/osd/PG.cc
@@ -5533,8 +5533,9 @@
   PG *pg = context< RecoveryMachine >().pg;
   pg->want_acting.clear();
   utime_t dur = ceph_clock_now(pg->cct) - enter_time;
   pg->osd->recoverystate_perf->tinc(rs_primary_latency, dur);
+  pg->clear_primary_state();
 }
 
 /*---------Peering--------*/
 PG::RecoveryState::Peering::Peering(my_context ctx)
